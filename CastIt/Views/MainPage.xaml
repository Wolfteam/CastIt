<views:MvxWpfView
    x:Class="CastIt.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cb="clr-namespace:CastIt.Common.Behaviours"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:local="clr-namespace:CastIt.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vms="clr-namespace:CastIt.ViewModels"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid VerticalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <uc:WindowButtons
            Grid.Row="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch" />

        <Image
            Grid.Row="1"
            Grid.Column="0"
            Width="200"
            Height="150"
            HorizontalAlignment="Left"
            Source="/Resources/Clannad.jpg" />

        <Grid
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <materialDesign:ColorZone
                Grid.Row="0"
                Grid.ColumnSpan="2"
                Padding="16"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Mode="Inverted">
                <StackPanel Orientation="Vertical">
                    <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="Now playing" />
                    <TextBlock Style="{StaticResource MaterialDesignSubtitle1TextBlock}" Text="Nanahira  課金厨のうた -More Charin Ver.-.mp3" />
                </StackPanel>
            </materialDesign:ColorZone>

            <StackPanel
                Grid.Row="1"
                Grid.Column="0"
                Margin="0,0,0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="TitleBackward" />
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="SkipPrevious" />
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="Play" />
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="Stop" />
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="SkipNext" />
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="TitleForward" />
                </Button>
            </StackPanel>

            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,0,0,10"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
                <Button Click="Button_Click" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="ChevronDown" />
                    <Button.Style>
                        <Style BasedOn="{StaticResource MainButtonStyle}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsPlaylistVisible}" Value="False">
                                    <Setter Property="Button.Content">
                                        <Setter.Value>
                                            <materialDesign:PackIcon Kind="ChevronUp" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="Cog" />
                </Button>
                <Button Style="{StaticResource MainButtonStyle}" ToolTip="MaterialDesignIconButton">
                    <materialDesign:PackIcon Kind="Tv" />
                </Button>
            </StackPanel>
        </Grid>

        <ProgressBar
            Grid.Row="2"
            Grid.ColumnSpan="2"
            Height="6"
            Style="{StaticResource AppProgressBarStyle}"
            Value="40" />

        <dragablz:TabablzControl
            x:Name="PlaylistTabControl"
            Grid.Row="3"
            Grid.ColumnSpan="2"
            VerticalContentAlignment="Stretch"
            BorderThickness="0">
            <dragablz:TabablzControl.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add new playlist">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Plus" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </dragablz:TabablzControl.ContextMenu>
            <TabItem>
                <TabItem.Header>
                    <Grid>
                        <Grid.ContextMenu>
                            <ContextMenu StaysOpen="False">
                                <MenuItem Header="Rename">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="RenameBox" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Delete">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="DeleteForever" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Delete all except this">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="DeleteEmpty" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <!--  we'll be in a popup, so give dragablz a hint as to what tab header content needs closing  -->
                                <!--<MenuItem Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"/>-->
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <TextBlock Foreground="White" Text="Music" />
                    </Grid>
                </TabItem.Header>
                <!--
                    Setting ScrollViewer.CanContentScroll="False" disables virtualization
                    but makes a smooth scroll while dragging
                -->
                <ListView
                    x:Name="PlaylistLv"
                    Grid.Row="1"
                    HorizontalContentAlignment="Stretch"
                    cb:DragDropExtension.ScrollOnDragDrop="True"
                    materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                    AllowDrop="True"
                    Background="Transparent"
                    DragEnter="PlaylistLv_DragEnter"
                    DragLeave="PlaylistLv_DragLeave"
                    Drop="PlaylistLv_Drop"
                    Foreground="White"
                    ItemsSource="{Binding Files}"
                    MouseMove="PlaylistLv_MouseMove"
                    PreviewMouseLeftButtonDown="PlaylistLv_PreviewMouseLeftButtonDown"
                    ScrollViewer.CanContentScroll="False">
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type vms:FileItemViewModel}">
                            <Border x:Name="Border">
                                <uc:FileItem DataContext="{Binding}" />
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </TabItem>
            <TabItem Header="Old Music">
                <TextBox
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White">
                    Drop files here
                </TextBox>
            </TabItem>
            <TabItem Header="Default">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Looks Quite Nice</TextBlock>
            </TabItem>
        </dragablz:TabablzControl>
        <!--<Expander
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Padding="0"
            VerticalContentAlignment="Stretch"
            Background="Transparent"
            IsExpanded="{Binding IsPlaylistVisible}">
        -->
        <!--<Expander.Template>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                        <DockPanel>
                            <ContentPresenter
                                Margin="1"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                Focusable="false" />
                            <ContentPresenter
                                x:Name="ExpandSite"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="false"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Expander.Template>-->
        <!--
        </Expander>-->

    </Grid>
</views:MvxWpfView>
