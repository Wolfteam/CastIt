<UserControl
    x:Class="CastIt.Views.UserControls.ButtonsBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    d:DesignHeight="150"
    d:DesignWidth="600"
    mc:Ignorable="d">
    <Grid HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <materialDesign:ColorZone
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Padding="16,0,16,16"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Mode="Inverted">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,0,0,5"
                    TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource MaterialDesignHeadline6TextBlock}" TargetType="TextBlock">
                            <Setter Property="Text" Value="" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsCurrentlyPlaying}" Value="True">
                                    <Setter Property="Text" Value="{Binding [NowPlaying]}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="0,0,5,0"
                    Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                    Text="{Binding CurrentlyPlayingFilename}"
                    TextTrimming="CharacterEllipsis" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                    Text="{Binding ElapsedTimeString}"
                    Visibility="{Binding IsCurrentlyPlaying, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </materialDesign:ColorZone>

        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Orientation="Horizontal">
            <Button
                Command="{Binding PreviousCommand}"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [Previous]}">
                <materialDesign:PackIcon Kind="SkipPrevious" />
            </Button>
            <Button
                Command="{Binding SkipCommand}"
                CommandParameter="-30"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [GoBack30Sec]}">
                <materialDesign:PackIcon Kind="TitleBackward" />
            </Button>
            <Button Command="{Binding TogglePlayBackCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource MainButtonStyle}" TargetType="Button">
                        <Setter Property="ToolTip" Value="{Binding [Play]}" />
                        <Setter Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Kind="Play" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPaused}" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <materialDesign:PackIcon Kind="Pause" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="{Binding [Pause]}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button
                Command="{Binding StopPlayBackCommand}"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [Stop]}">
                <materialDesign:PackIcon Kind="Stop" />
            </Button>
            <Button
                Command="{Binding SkipCommand}"
                CommandParameter="30"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [GoForward30Sec]}">
                <materialDesign:PackIcon Kind="TitleForward" />
            </Button>
            <Button
                Command="{Binding NextCommand}"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [Next]}">
                <materialDesign:PackIcon Kind="SkipNext" />
            </Button>
        </StackPanel>

        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Orientation="Horizontal">
            <Popup
                IsOpen="{Binding ShowSettingsPopUp, Mode=TwoWay}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=SettingsButton}"
                StaysOpen="False">
                <Popup.HorizontalOffset>
                    <MultiBinding Converter="{StaticResource CenterPopUpConverter}" ConverterParameter="False">
                        <Binding ElementName="SettingsUserControl" Path="Width " />
                        <Binding ElementName="SettingsButton" Path="ActualWidth" />
                    </MultiBinding>
                </Popup.HorizontalOffset>
                <uc:Settings x:Name="SettingsUserControl" />
            </Popup>
            <Popup
                IsOpen="{Binding ShowDevicesPopUp, Mode=TwoWay}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=DevicesButton}"
                StaysOpen="False">
                <Popup.HorizontalOffset>
                    <MultiBinding Converter="{StaticResource CenterPopUpConverter}" ConverterParameter="False">
                        <Binding ElementName="DevicesUserControl" Path="Width " />
                        <Binding ElementName="DevicesButton" Path="ActualWidth" />
                    </MultiBinding>
                </Popup.HorizontalOffset>
                <uc:DiscoveredDevices x:Name="DevicesUserControl" />
            </Popup>
            <Button Click="Button_Click">
                <Button.Style>
                    <Style BasedOn="{StaticResource MainButtonStyle}" TargetType="Button">
                        <Setter Property="Content">
                            <Setter.Value>
                                <materialDesign:PackIcon Kind="ChevronUp" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ToolTip" Value="{Binding [Collapse]}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <materialDesign:PackIcon Kind="ChevronDown" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="{Binding [Expand]}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button
                x:Name="SettingsButton"
                Command="{Binding OpenSettingsCommand}"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [Settings]}">
                <materialDesign:PackIcon Kind="Cog" />
            </Button>
            <Button
                x:Name="DevicesButton"
                Command="{Binding OpenDevicesCommand}"
                Style="{StaticResource MainButtonStyle}"
                ToolTip="{Binding [Devices]}">
                <materialDesign:PackIcon Kind="Tv" />
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
