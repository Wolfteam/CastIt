<views:MvxWpfView
    x:Class="CastIt.Views.UserControls.Devices"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uv="clr-namespace:CastIt.Views"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    xmlns:vms="clr-namespace:CastIt.ViewModels"
    Width="350"
    Height="350"
    d:DataContext="{d:DesignInstance Type=vms:DevicesViewModel}"
    d:DesignHeight="350"
    d:DesignWidth="350"
    x:TypeArguments="vms:DevicesViewModel"
    mc:Ignorable="d">

    <views:MvxWpfView.Resources>
        <DataTemplate x:Key="DeviceItemTemplate" DataType="{x:Type vmis:DeviceItemViewModel}">
            <local:DeviceItem DataContext="{Binding}" Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" />
        </DataTemplate>

        <Style x:Key="DeviceStyle" TargetType="{x:Type ItemsControl}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DataContext.IsConnecting, RelativeSource={RelativeSource Self}}" Value="False" />
                        <Condition Binding="{Binding DataContext.IsRefreshing, RelativeSource={RelativeSource Self}}" Value="False" />
                        <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="24"
                                    Foreground="{DynamicResource FontColorBrush}"
                                    Text="{Binding [NoDevicesWereFound]}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </views:MvxWpfView.Resources>

    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="{DynamicResource WindowLightBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <materialDesign:ColorZone
            Grid.Row="0"
            Padding="16"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{DynamicResource MaterialDesign.Brush.Primary.Dark}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <materialDesign:PackIcon
                    Grid.Column="0"
                    Kind="Tv"
                    Style="{StaticResource ColorZoneIconStyle}" />
                <TextBlock
                    Grid.Column="1"
                    d:Text="Devices"
                    Style="{StaticResource ColorZoneTextBlockWithIconStyle}"
                    Text="{Binding [Devices]}" />
                <ProgressBar
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    Foreground="{DynamicResource FontColorOnDarkBackgroundBrush}"
                    IsIndeterminate="True">
                    <ProgressBar.Style>
                        <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnecting}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRefreshing}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
            </Grid>
        </materialDesign:ColorZone>
        <ScrollViewer
            Grid.Row="1"
            Margin="16"
            materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
            VerticalScrollBarVisibility="Auto">
            <ItemsControl
                x:Name="DevicesControl"
                ItemTemplate="{StaticResource DeviceItemTemplate}"
                ItemsSource="{Binding Devices}"
                Style="{StaticResource DeviceStyle}" />
        </ScrollViewer>
        <Button
            Grid.Row="2"
            Margin="30,10"
            d:Content="Don't see your device?"
            BorderBrush="{DynamicResource MaterialDesign.Brush.Primary.Dark}"
            Command="{Binding RefreshDevicesCommand}"
            Foreground="{DynamicResource FontColorBrush}"
            Visibility="{Binding ViewModel.ServerIsRunning, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type uv:MainPage}}}">
            <Button.Style>
                <Style BasedOn="{StaticResource MaterialDesignOutlinedButton}" TargetType="{x:Type Button}">
                    <Setter Property="Content" Value="{Binding [RefreshDevicesMsg]}" />
                    <Setter Property="ToolTip" Value="{Binding [RefreshDevicesMsg]}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsConnecting}" Value="True">
                            <Setter Property="Content" Value="{Binding [Connecting]}" />
                            <Setter Property="ToolTip" Value="{Binding [Connecting]}" />
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsRefreshing}" Value="True">
                            <Setter Property="Content" Value="{Binding [Searching]}" />
                            <Setter Property="ToolTip" Value="{Binding [Searching]}" />
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</views:MvxWpfView>
