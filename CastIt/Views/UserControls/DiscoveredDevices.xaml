<views:MvxWpfView
    x:Class="CastIt.Views.UserControls.DiscoveredDevices"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    xmlns:vms="clr-namespace:CastIt.ViewModels"
    Width="350"
    Height="350"
    d:DesignHeight="350"
    d:DesignWidth="350"
    x:TypeArguments="vms:DevicesViewModel"
    mc:Ignorable="d">

    <views:MvxWpfView.Resources>
        <DataTemplate x:Key="DeviceItemTemplate" DataType="{x:Type vmis:DeviceItemViewModel}">
            <Grid Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <materialDesign:PackIcon
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Margin="0,0,10,0"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource PrimaryHueMidBrush}"
                    Kind="Tv" />

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource FontColorBrush}"
                    Text="{Binding FriendlyName}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    VerticalAlignment="Top"
                    Foreground="{DynamicResource FontColorBrush}"
                    Text="{Binding IpAdress}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="Wrap" />
                <Button
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Command="{Binding DataContext.ConnectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource MainButtonStyle}"
                    ToolTip="{Binding [Connect]}"
                    Visibility="{Binding IsSelected, Converter={StaticResource InverseBoolToVisConverter}}">
                    <materialDesign:PackIcon Kind="CastConnected" />
                </Button>
                <Button
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Command="{Binding DataContext.DisconnectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource MainButtonStyle}"
                    ToolTip="{Binding [Disconnect]}"
                    Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon Kind="CastOff" />
                </Button>
            </Grid>
        </DataTemplate>

        <Style x:Key="DeviceStyle" TargetType="{x:Type ItemsControl}">
            <Style.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="24"
                                    Foreground="{DynamicResource FontColorBrush}"
                                    Text="{Binding [NoDevicesWereFound]}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </views:MvxWpfView.Resources>

    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="{DynamicResource WindowLightBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <materialDesign:ColorZone
            Grid.Row="0"
            Padding="16"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{DynamicResource PrimaryHueDarkBrush}">
            <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                <materialDesign:PackIcon Kind="Tv" Style="{StaticResource ColorZoneIconStyle}" />
                <TextBlock Style="{StaticResource ColorZoneTextBlockWithIconStyle}" Text="{Binding [Devices]}" />
            </StackPanel>
        </materialDesign:ColorZone>
        <ScrollViewer
            Grid.Row="1"
            Padding="16"
            materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
            ScrollViewer.VerticalScrollBarVisibility="Auto">
            <ItemsControl
                ItemTemplate="{StaticResource DeviceItemTemplate}"
                ItemsSource="{Binding Devices}"
                Style="{StaticResource DeviceStyle}" />
        </ScrollViewer>
    </Grid>
</views:MvxWpfView>
