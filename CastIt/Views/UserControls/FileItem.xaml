<UserControl
    x:Class="CastIt.Views.UserControls.FileItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    d:DataContext="{d:DesignInstance Type=vmis:FileItemViewModel}"
    d:DesignHeight="80"
    d:DesignWidth="550"
    mc:Ignorable="d">

    <!--  This tag binding contains the playlist vm  -->
    <Grid
        Margin="10,0"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Tag="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.ContextMenu>
            <ContextMenu StaysOpen="False">
                <MenuItem Command="{Binding PlayCommand}" Header="{Binding [PlayFile]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Play" />
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Exists}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Command="{Binding PlayFromTheBeginingCommand}" Header="{Binding [PlayFromTheBegining]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Refresh" />
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Exists}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Command="{Binding ToggleLoopCommand}" Visibility="{Binding IsBeingPlayed, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem.Style>
                        <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Loop}" Value="True">
                                    <Setter Property="Header" Value="{Binding [DontLoopFile]}" />
                                    <Setter Property="Icon">
                                        <Setter.Value>
                                            <materialDesign:PackIcon Kind="RepeatOff" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Loop}" Value="False">
                                    <Setter Property="Header" Value="{Binding [LoopFile]}" />
                                    <Setter Property="Icon">
                                        <Setter.Value>
                                            <materialDesign:PackIcon Kind="Repeat" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding PlacementTarget.Tag.AddFolderCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Header="{Binding [AddFolder]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Folder" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding PlacementTarget.Tag.AddFilesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Header="{Binding [AddFiles]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Add" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding PlacementTarget.Tag.ShowAddUrlPopUpCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Header="{Binding [AddUrl]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="LinkAdd" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding PlacementTarget.Tag.RemoveFileCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    CommandParameter="{Binding}"
                    Header="{Binding [Remove]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Delete" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding PlacementTarget.Tag.RemoveAllMissingCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Header="{Binding [RemoveAllMissing]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DeleteEmpty" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Command="{Binding PlacementTarget.Tag.SelectAllCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}" Header="{Binding [SelectAll]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="SelectAll" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding OpenFileLocationCommand}">
                    <MenuItem.Style>
                        <Style BasedOn="{StaticResource MaterialDesignMenuItem}" TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding [OpenFileLocation]}" />
                            <Setter Property="Icon">
                                <Setter.Value>
                                    <materialDesign:PackIcon Kind="Folder" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUrlFile}" Value="True">
                                    <Setter Property="Header" Value="{Binding [OpenUrl]}" />
                                    <Setter Property="Icon">
                                        <Setter.Value>
                                            <materialDesign:PackIcon Kind="Web" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Exists}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <Grid.InputBindings>
            <MouseBinding Command="{Binding PlayCommand}" MouseAction="LeftDoubleClick" />
        </Grid.InputBindings>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Separator
            Grid.Row="0"
            Grid.ColumnSpan="3"
            VerticalAlignment="Center"
            Style="{StaticResource FileItemSeparatorStyle}"
            Visibility="{Binding IsSeparatorTopLineVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <ToggleButton
            Grid.Row="0"
            Grid.RowSpan="5"
            Grid.Column="0"
            Margin="0,0,5,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            materialDesign:ToggleButtonAssist.OnContent="{Binding Position}"
            Background="{DynamicResource DarkestColorBrush}"
            Content="{Binding Position}"
            Cursor="{x:Null}"
            Focusable="False"
            Foreground="{DynamicResource FontColorBrush}"
            IsChecked="True"
            IsTabStop="False"
            Style="{StaticResource MaterialDesignActionLightToggleButton}" />

        <TextBlock
            Grid.Row="1"
            Grid.Column="1"
            d:Text="Cupid's Chocolate Opening.mp4"
            Text="{Binding Filename}">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource FileItemTextStyleWithTriggers}" TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowFileDetails}" Value="False">
                            <Setter Property="Grid.RowSpan" Value="5" />
                            <Setter Property="Margin" Value="0,0,0,5" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock
            Grid.Row="2"
            Grid.Column="1"
            d:Text=".MP4 | 40.67MB | 1360x768"
            Style="{StaticResource FileItemSubTextStyleWithTriggers}"
            Text="{Binding SubTitle}"
            Visibility="{Binding ShowFileDetails, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <TextBlock
            Grid.Row="3"
            Grid.Column="1"
            Margin="0,0,10,0"
            d:Text="E:\Videos\Cupid's Chocolates Opening.mp4"
            Style="{StaticResource FileItemSubTextStyleWithTriggers}"
            Text="{Binding Path}"
            Visibility="{Binding ShowFileDetails, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <materialDesign:PackIcon
            Grid.Row="1"
            Grid.Column="2"
            HorizontalAlignment="Right"
            Foreground="{DynamicResource FontColorBrush}"
            Kind="Repeat"
            Visibility="{Binding Loop, Converter={StaticResource BooleanToVisibilityConverter}}" />

        <TextBlock
            Grid.Row="0"
            Grid.RowSpan="5"
            Grid.Column="2"
            d:Text="00:30 / 1:40"
            Style="{StaticResource FileItemTextStyleWithTriggers}"
            TextAlignment="Right">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} / {1}">
                    <Binding Path="PlayedTime" />
                    <Binding Path="Duration" />
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <ProgressBar
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Margin="0,5"
            VerticalAlignment="Center"
            d:Value="50"
            Maximum="100"
            Minimum="0"
            Value="{Binding PlayedPercentage, Mode=OneWay}">
            <ProgressBar.Style>
                <Style BasedOn="{StaticResource AppProgressBarStyle}" TargetType="{x:Type ProgressBar}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowFileDetails}" Value="False">
                            <Setter Property="Grid.Column" Value="1" />
                            <Setter Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>

        <Separator
            Grid.Row="5"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            VerticalAlignment="Center"
            Style="{StaticResource FileItemSeparatorStyle}"
            Visibility="{Binding IsSeparatorBottomLineVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
    </Grid>
</UserControl>
