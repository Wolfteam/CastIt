<local:BasePlayListItem
    x:Class="CastIt.Views.UserControls.PlayListItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:cb="clr-namespace:CastIt.Common.Behaviours"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:enums="clr-namespace:CastIt.Domain.Enums;assembly=CastIt.Domain"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:selectors="clr-namespace:CastIt.Common.Selectors"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    xmlns:up="clr-namespace:CastIt.Views.Popups"
    xmlns:uv="clr-namespace:CastIt.Views"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vm="clr-namespace:CastIt.ViewModels"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    d:DataContext="{d:DesignInstance Type=vmis:PlayListItemViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ControlTemplate x:Key="VolumeMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel
                    Grid.Row="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <materialDesign:PackIcon VerticalAlignment="Center" Kind="VolumeHigh" />
                    <TextBlock
                        Margin="5,5"
                        Text="{Binding [Volume]}"
                        TextAlignment="Center" />
                </StackPanel>
                <Slider
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="10,5,10,5"
                    VerticalAlignment="Center"
                    IsManipulationEnabled="True"
                    IsSnapToTickEnabled="True"
                    LargeChange="0.1"
                    Maximum="1"
                    Minimum="0"
                    PreviewMouseDown="VolumeSlider_OnPreviewMouseDown"
                    PreviewMouseUp="VolumeSlider_OnPreviewMouseUp"
                    Style="{StaticResource CustomSliderStyle}"
                    TickFrequency="0.1"
                    Value="{Binding ViewModel.VolumeLevel, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" />
                <Button
                    Grid.Row="1"
                    Grid.Column="1"
                    Width="24"
                    Height="24"
                    Margin="0,0,5,0"
                    Command="{Binding ViewModel.ToggleMuteCommand, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignIconButton}" TargetType="{x:Type Button}">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <materialDesign:PackIcon Kind="VolumeHigh" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ViewModel.IsMuted, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <materialDesign:PackIcon Kind="VolumeMute" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </ControlTemplate>

        <Style
            x:Key="PlayListLvStyle"
            BasedOn="{StaticResource MaterialDesignListView}"
            TargetType="ListView">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <!--  The background is required, otherwise the drag and drop wont work  -->
                                <Grid
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="24"
                                        Text="{Binding [DropFilesHere]}"
                                        TextAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Had to use a style, because a data template produce weird issues  -->
        <Style
            x:Key="FileOptionsItemContainerStyle"
            BasedOn="{StaticResource MaterialDesignMenuItem}"
            TargetType="{x:Type MenuItem}">
            <Setter Property="IsCheckable" Value="True" />
            <Setter Property="Header" Value="{Binding Text}" />
            <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
            <Setter Property="Command" Value="{Binding ViewModel.FileOptionsChangedCommand, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" />
            <Setter Property="CommandParameter" Value="{Binding}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected, Mode=OneWay}" Value="True">
                    <Setter Property="IsChecked" Value="True" />
                    <!--  This one is kinda hack, but avoid selecting a previous selected one  -->
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, Mode=OneWay}" Value="False">
                    <Setter Property="IsChecked" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <CollectionViewSource x:Key="SubTitlesItems" Source="{Binding ViewModel.CurrentFileSubTitles, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" />
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--
            Setting ScrollViewer.CanContentScroll="False" disables virtualization
            but makes a smooth scroll while dragging
            Setting ScrollViewer.HorizontalScrollBarVisibility="Disabled" fixes the width problem on resizes
            https://stackoverflow.com/questions/40013780/wpf-textblock-texttrimming-not-working-inside-a-grid-with-gridsplitter
            Btw ScrollViewer.HorizontalScrollBarVisibility="Disabled" + ScrollViewer.CanContentScroll="True" lags while resizing...
        -->
        <ListView
            x:Name="PlaylistLv"
            Grid.Row="0"
            Margin="0,5"
            cb:DragDropExtension.ScrollOnDragDrop="True"
            materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
            DragEnter="PlaylistLv_DragEnter"
            DragLeave="PlaylistLv_DragLeave"
            Drop="PlaylistLv_Drop"
            FocusVisualStyle="{x:Null}"
            ItemsSource="{Binding Items}"
            KeyboardNavigation.TabNavigation="Cycle"
            MouseMove="PlaylistLv_MouseMove"
            PreviewMouseLeftButtonDown="PlaylistLv_PreviewMouseLeftButtonDown"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
            Style="{StaticResource PlayListLvStyle}"
            Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}">
            <behaviours:Interaction.Behaviors>
                <cb:MultiSelectionBehavior SelectedItems="{Binding SelectedItems}" />
            </behaviours:Interaction.Behaviors>
            <ListView.ContextMenu>
                <ContextMenu x:Name="PlayListContextMenu">
                    <MenuItem Command="{Binding AddFolderCommand}" Header="{Binding [AddFolder]}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Folder" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding AddFilesCommand}" Header="{Binding [AddFiles]}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Add" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="{Binding ShowAddUrlPopUpCommand}" Header="{Binding [AddUrl]}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="LinkAdd" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.InputBindings>
                <KeyBinding
                    Key="F"
                    Command="{Binding AddFolderCommand}"
                    Modifiers="Ctrl" />
                <KeyBinding
                    Key="S"
                    Command="{Binding AddFilesCommand}"
                    Modifiers="Ctrl" />
                <KeyBinding
                    Command="{Binding PlayFileCommand}"
                    CommandParameter="{Binding ElementName=PlaylistLv, Path=SelectedItem}"
                    Gesture="Enter" />
                <KeyBinding
                    Command="{Binding RemoveFileCommand}"
                    CommandParameter="{Binding ElementName=PlaylistLv, Path=SelectedItem}"
                    Gesture="Delete" />
                <KeyBinding Key="F1" Command="{Binding ViewModel.PreviousCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type uv:MainPage}}}" />
                <KeyBinding Key="F2" Command="{Binding ViewModel.NextCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type uv:MainPage}}}" />
                <KeyBinding Key="Space" Command="{Binding ViewModel.TogglePlayBackCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type uv:MainPage}}}" />
            </ListView.InputBindings>
            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="ListViewItem">
                    <Setter Property="Padding" Value="5,0,5,0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                    <!--  This removes the dots  -->
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Primary.Light}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type vmis:FileItemViewModel}">
                    <uc:FileItem DataContext="{Binding}" Tag="{Binding Source={x:Reference Name=PlaylistLv}, Path=DataContext}" />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <up:AddFromUrlPopup
            Grid.Row="0"
            IsOpen="{Binding ShowAddUrlPopUp, Mode=TwoWay}"
            PlacementTarget="{Binding ElementName=PlaylistLv}" />

        <materialDesign:ColorZone
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            Background="{DynamicResource DarkestColorBrush}"
            Visibility="{Binding Items.Count, Converter={StaticResource NotZeroToVisibilityConverter}}">

            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Visibility="{Binding ShowTotalDuration, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon Margin="10,0,0,0" Kind="TimerSand" />
                    <TextBlock VerticalAlignment="Center" Text="{Binding TotalDuration, Mode=OneWay}" />
                </StackPanel>

                <Grid
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon
                        Grid.Column="0"
                        Width="16"
                        Height="16"
                        VerticalAlignment="Center"
                        Kind="Search" />
                    <TextBox
                        x:Name="PlayListFilter"
                        Grid.Column="1"
                        Width="150"
                        Height="40"
                        Padding="5,0"
                        HorizontalAlignment="Right"
                        VerticalContentAlignment="Center"
                        materialDesign:HintAssist.Hint="{Binding [QuickSearch]}"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource MaterialDesign.Brush.Primary.Dark}"
                        TextChanged="PlayListFilter_TextChanged" />

                    <uc:LoopPlayListToggleButton Grid.Column="2" />
                    <uc:ShufflePlayListToggleButton Grid.Column="3" />

                    <Button
                        Grid.Column="4"
                        Height="36"
                        materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesign.Brush.Primary.Dark}"
                        materialDesign:RippleAssist.IsCentered="True"
                        Command="{Binding ScrollToSelectedFileCommand}"
                        ToolTip="{Binding [GoToSelectedFile]}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniLightButton}" TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Primary.Dark}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource FontColorBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding SelectedItem}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <materialDesign:PackIcon
                            Width="16"
                            Height="16"
                            Kind="Jump" />
                    </Button>

                    <Menu
                        Grid.Column="5"
                        Background="{DynamicResource DarkestColorBrush}"
                        IsMainMenu="True"
                        IsTabStop="False"
                        ToolTip="{Binding [Sort]}">
                        <Menu.Style>
                            <Style BasedOn="{StaticResource MaterialDesignMenu}" TargetType="{x:Type Menu}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Value="True">
                                                <Condition.Binding>
                                                    <MultiBinding Converter="{StaticResource BooleanOrConverter}">
                                                        <Binding Path="ViewModel.IsBusy" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                                        <Binding Path="IsBusy" />
                                                    </MultiBinding>
                                                </Condition.Binding>
                                            </Condition>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Menu.Style>
                        <MenuItem
                            Height="40"
                            IsTabStop="False"
                            Style="{StaticResource CustomIconMenuItem}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon
                                    HorizontalAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    Kind="Sort" />
                            </MenuItem.Icon>

                            <MenuItem
                                Command="{Binding SortFilesCommand}"
                                CommandParameter="{x:Static enums:SortModeType.AlphabeticalNameAsc}"
                                Header="{Binding [ByNameAsc]}"
                                IsCheckable="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="SortAlphabeticalAscending" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding SortFilesCommand}"
                                CommandParameter="{x:Static enums:SortModeType.AlphabeticalNameDesc}"
                                Header="{Binding [ByNameDesc]}"
                                IsCheckable="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="SortAlphabeticalAscending" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding SortFilesCommand}"
                                CommandParameter="{x:Static enums:SortModeType.AlphabeticalPathAsc}"
                                Header="{Binding [ByPathAsc]}"
                                IsCheckable="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="SortAlphabeticalAscending" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding SortFilesCommand}"
                                CommandParameter="{x:Static enums:SortModeType.AlphabeticalPathDesc}"
                                Header="{Binding [ByPathDesc]}"
                                IsCheckable="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="SortAlphabeticalAscending" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding SortFilesCommand}"
                                CommandParameter="{x:Static enums:SortModeType.DurationAsc}"
                                Header="{Binding [ByDurationAsc]}"
                                IsCheckable="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="SortNumericAscending" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Command="{Binding SortFilesCommand}"
                                CommandParameter="{x:Static enums:SortModeType.DurationDesc}"
                                Header="{Binding [ByDurationDesc]}"
                                IsCheckable="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="SortNumericDescending" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </Menu>

                    <Menu
                        Grid.Column="6"
                        Background="{DynamicResource DarkestColorBrush}"
                        IsMainMenu="True"
                        IsTabStop="False"
                        ToolTip="{Binding [FileOptions]}">
                        <Menu.Style>
                            <Style BasedOn="{StaticResource MaterialDesignMenu}" TargetType="{x:Type Menu}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ViewModel.IsCurrentlyPlaying, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" Value="True" />
                                            <Condition Binding="{Binding ViewModel.IsBusy, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ViewModel.IsBusy, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Menu.Style>
                        <MenuItem
                            Height="40"
                            IsTabStop="False"
                            Style="{StaticResource CustomIconMenuItem}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon
                                    HorizontalAlignment="Center"
                                    HorizontalContentAlignment="Center"
                                    Kind="Menu" />
                            </MenuItem.Icon>
                            <MenuItem Header="{Binding [FileOptions]}" IsEnabled="False">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon
                                        HorizontalAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        Kind="Cog" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem
                                Header="{Binding [Audio]}"
                                ItemContainerStyle="{StaticResource FileOptionsItemContainerStyle}"
                                ItemsSource="{Binding ViewModel.CurrentFileAudios, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}">
                                <MenuItem.IsEnabled>
                                    <MultiBinding Converter="{StaticResource FileOptionsMultiConverter}">
                                        <Binding Path="ViewModel.CurrentFileAudios.Count" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                        <Binding Path="ViewModel.IsCurrentlyPlaying" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                    </MultiBinding>
                                </MenuItem.IsEnabled>
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Audio" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Binding [Subtitles]}">
                                <MenuItem.ItemsSource>
                                    <CompositeCollection>
                                        <!--  Remember, you cant use x:Reference if the target contains the child (the x:Reference one)  -->
                                        <MenuItem
                                            Command="{Binding Tag.OpenSubTitleFileDialogCommand, Source={x:Reference Name=PlaylistLv}}"
                                            Header="{Binding [Search]}"
                                            IsCheckable="False">
                                            <MenuItem.Icon>
                                                <materialDesign:PackIcon Kind="Search" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <CollectionContainer Collection="{Binding Source={StaticResource SubTitlesItems}}" />
                                    </CompositeCollection>
                                </MenuItem.ItemsSource>
                                <MenuItem.ItemContainerStyleSelector>
                                    <selectors:FileOptionsItemContainerStyleSelector Dynamic="{StaticResource FileOptionsItemContainerStyle}" Normal="{StaticResource MaterialDesignMenuItem}" />
                                </MenuItem.ItemContainerStyleSelector>
                                <MenuItem.IsEnabled>
                                    <MultiBinding Converter="{StaticResource FileOptionsMultiConverter}">
                                        <Binding Path="ViewModel.CurrentFileSubTitles.Count" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                        <Binding Path="ViewModel.IsCurrentlyPlaying" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                    </MultiBinding>
                                </MenuItem.IsEnabled>
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Subtitles" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem
                                Header="{Binding [Quality]}"
                                ItemContainerStyle="{StaticResource FileOptionsItemContainerStyle}"
                                ItemsSource="{Binding ViewModel.CurrentFileQualities, RelativeSource={RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}}">
                                <MenuItem.IsEnabled>
                                    <MultiBinding Converter="{StaticResource FileOptionsMultiConverter}">
                                        <Binding Path="ViewModel.CurrentFileQualities.Count" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                        <Binding Path="ViewModel.IsCurrentlyPlaying" RelativeSource="{RelativeSource AncestorType={x:Type uv:MainPage}, Mode=FindAncestor}" />
                                    </MultiBinding>
                                </MenuItem.IsEnabled>
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="QualityHigh" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Template="{StaticResource VolumeMenuItemControlTemplate}" />
                        </MenuItem>
                    </Menu>
                </Grid>
            </Grid>

        </materialDesign:ColorZone>

    </Grid>
</local:BasePlayListItem>
