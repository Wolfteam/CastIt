<views:MvxWpfView
    x:Class="CastIt.Views.UserControls.PlayListItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cb="clr-namespace:CastIt.Common.Behaviours"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vm="clr-namespace:CastIt.ViewModels"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:TypeArguments="vmis:PlayListItemViewModel"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style
            x:Key="PlayListLvStyle"
            BasedOn="{StaticResource MaterialDesignListView}"
            TargetType="ListView">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Style.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="24"
                                    Text="{Binding [DropFilesHere]}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <!--
        Setting ScrollViewer.CanContentScroll="False" disables virtualization
        but makes a smooth scroll while dragging
    -->
    <ListView
        x:Name="PlaylistLv"
        cb:DragDropExtension.ScrollOnDragDrop="True"
        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
        DragEnter="PlaylistLv_DragEnter"
        DragLeave="PlaylistLv_DragLeave"
        Drop="PlaylistLv_Drop"
        ItemsSource="{Binding Items}"
        KeyboardNavigation.TabNavigation="Cycle"
        MouseMove="PlaylistLv_MouseMove"
        PreviewMouseLeftButtonDown="PlaylistLv_PreviewMouseLeftButtonDown"
        ScrollViewer.CanContentScroll="False"
        Style="{StaticResource PlayListLvStyle}">
        <ListView.ContextMenu>
            <ContextMenu>
                <MenuItem Command="{Binding AddFolderCommand}" Header="{Binding [AddFolder]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Folder" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Command="{Binding AddFilesCommand}" Header="{Binding [AddFiles]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Add" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </ListView.ContextMenu>
        <ListView.InputBindings>
            <KeyBinding
                Command="{Binding PlayFileCommand}"
                CommandParameter="{Binding ElementName=PlaylistLv, Path=SelectedItem}"
                Gesture="Enter" />
            <KeyBinding
                Command="{Binding RemoveFileCommand}"
                CommandParameter="{Binding ElementName=PlaylistLv, Path=SelectedItem}"
                Gesture="Delete" />
            <KeyBinding Key="Space" Command="{Binding DataContext.TogglePlayBackCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}}" />
        </ListView.InputBindings>
        <ListView.ItemTemplate>
            <DataTemplate DataType="{x:Type vmis:FileItemViewModel}">
                <Border x:Name="Border">
                    <uc:FileItem DataContext="{Binding}" Tag="{Binding Source={x:Reference Name=PlaylistLv}, Path=DataContext}" />
                </Border>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ListView.ItemTemplate>
    </ListView>
</views:MvxWpfView>
