<UserControl
    x:Class="CastIt.Views.UserControls.PlayListItemHeader"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid Tag="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.ContextMenu>
            <ContextMenu StaysOpen="False">
                <MenuItem Command="{Binding OpenEditPopUpCommand}" Header="{Binding [Rename]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="RenameBox" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding PlacementTarget.Tag.DeletePlayListCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    CommandParameter="{Binding}"
                    Header="{Binding [Delete]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DeleteForever" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding PlacementTarget.Tag.DeleteAllPlayListsExceptCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    CommandParameter="{Binding}"
                    Header="{Binding [DeleteAllExceptThis]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DeleteEmpty" />
                    </MenuItem.Icon>
                </MenuItem>
                <!--  we'll be in a popup, so give dragablz a hint as to what tab header content needs closing  -->
                <!--<MenuItem Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"/>-->
            </ContextMenu>
        </Grid.ContextMenu>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <materialDesign:Chip
            Margin="0,0,10,0"
            VerticalAlignment="Center"
            Background="Red"
            Content="{Binding Items.Count}"
            FontSize="10" />
        <TextBlock
            x:Name="PlayListTitle"
            Grid.Column="1"
            VerticalAlignment="Center"
            Foreground="White"
            Text="{Binding Name}" />

        <Popup
            IsOpen="{Binding ShowEditPopUp, Mode=TwoWay}"
            Placement="Bottom"
            PlacementTarget="{Binding ElementName=PlayListTitle}"
            StaysOpen="False">
            <behaviours:Interaction.Triggers>
                <behaviours:EventTrigger EventName="Opened">
                    <behaviours:ChangePropertyAction
                        PropertyName="Text"
                        TargetObject="{Binding ElementName=EditPlayListNameUserControl, Path=PlayListNameTextBox}"
                        Value="{Binding Name}" />
                </behaviours:EventTrigger>
            </behaviours:Interaction.Triggers>

            <Popup.HorizontalOffset>
                <MultiBinding Converter="{StaticResource CenterPopUpConverter}" ConverterParameter="False">
                    <Binding ElementName="EditPlayListNameUserControl" Path="Width" />
                    <Binding ElementName="PlayListTitle" Path="ActualWidth" />
                </MultiBinding>
            </Popup.HorizontalOffset>
            <uc:EditPlayListName x:Name="EditPlayListNameUserControl" />
        </Popup>
    </Grid>
</UserControl>
