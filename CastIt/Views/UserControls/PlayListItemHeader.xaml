<UserControl
    x:Class="CastIt.Views.UserControls.PlayListItemHeader"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CastIt.Views.UserControls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="clr-namespace:CastIt.Views.UserControls"
    xmlns:up="clr-namespace:CastIt.Views.Popups"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:vmis="clr-namespace:CastIt.ViewModels.Items"
    d:DataContext="{d:DesignInstance Type=vmis:PlayListItemViewModel}"
    d:DesignHeight="70"
    d:DesignWidth="120"
    mc:Ignorable="d">
    <Grid Width="120" Tag="{Binding Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.ContextMenu>
            <ContextMenu StaysOpen="False">
                <MenuItem Command="{Binding OpenEditPopUpCommand}" Header="{Binding [Rename]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="RenameBox" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding PlacementTarget.Tag.DeletePlayListCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    CommandParameter="{Binding}"
                    Header="{Binding [Delete]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DeleteForever" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Command="{Binding PlacementTarget.Tag.DeleteAllPlayListsExceptCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"
                    CommandParameter="{Binding}"
                    Header="{Binding [DeleteAllExceptThis]}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DeleteEmpty" />
                    </MenuItem.Icon>
                </MenuItem>
                <!--  we'll be in a popup, so give dragablz a hint as to what tab header content needs closing  -->
                <!--<MenuItem Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"/>-->
            </ContextMenu>
        </Grid.ContextMenu>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <materialDesign:Chip
            Margin="0,0,10,0"
            VerticalAlignment="Center"
            Background="{DynamicResource PrimaryHueDarkBrush}"
            Content="{Binding NumberOfFiles}"
            FontSize="10"
            Foreground="{StaticResource FontColorOnDarkBackgroundBrush}" />
        <TextBlock
            x:Name="PlayListTitle"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Text="Playlist 1"
            Foreground="{DynamicResource FontColorBrush}"
            Text="{Binding Name}"
            TextTrimming="CharacterEllipsis"
            TextWrapping="NoWrap" />

        <up:RenamePlayListPopup
            Grid.Column="0"
            CurrentName="{Binding Name}"
            IsOpen="{Binding ShowEditPopUp, Mode=TwoWay}"
            PlacementTarget="{Binding ElementName=PlayListTitle}" />
    </Grid>
</UserControl>
