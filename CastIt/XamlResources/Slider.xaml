<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CastIt.XamlResources"
    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ControlTemplate x:Key="MaterialDesignSliderThumb" TargetType="{x:Type Thumb}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="ShowFocusVisualStoryboard">
                <DoubleAnimation
                    Storyboard.TargetName="focusedHalo"
                    Storyboard.TargetProperty="Opacity"
                    To="0.15"
                    Duration="0" />
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HideFocusVisualStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="focusedHalo" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.15" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetName="focusedHalo"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                    Duration="0">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    Storyboard.TargetName="focusedHalo"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                    Duration="0">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid
            x:Name="thumbGrid"
            Width="10"
            Height="12">
            <Ellipse
                x:Name="halo"
                Width="30"
                Height="30"
                Margin="-24"
                Fill="{TemplateBinding Foreground}"
                Opacity="0" />
            <Ellipse
                x:Name="focusedHalo"
                Width="30"
                Height="30"
                Margin="-24"
                Fill="{TemplateBinding Foreground}"
                Opacity="0.15"
                RenderTransformOrigin="0.5,0.5">
                <Ellipse.RenderTransform>
                    <ScaleTransform ScaleX="0" ScaleY="0" />
                </Ellipse.RenderTransform>
            </Ellipse>
            <AdornerDecorator>
                <AdornerDecorator.CacheMode>
                    <BitmapCache SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </AdornerDecorator.CacheMode>
                <Ellipse
                    x:Name="grip"
                    Margin="-1,0"
                    Effect="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=RangeBase}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static wpf:ShadowConverter.Instance}}"
                    Fill="{TemplateBinding Foreground}" />
            </AdornerDecorator>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource FindAncestor, AncestorType=RangeBase}}" Value="{x:Static Orientation.Vertical}">
                <Setter TargetName="thumbGrid" Property="Height" Value="18" />
                <Setter TargetName="thumbGrid" Property="Width" Value="20" />
                <Setter TargetName="grip" Property="Margin" Value="0,-1" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="halo"
                                Storyboard.TargetProperty="Opacity"
                                To="0.15"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="halo"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAllConverter}">
                        <Binding Path="IsFocused" RelativeSource="{RelativeSource FindAncestor, AncestorType=RangeBase}" />
                        <Binding
                            Converter="{StaticResource InvertBooleanConverter}"
                            Path="(wpf:SliderAssist.OnlyShowFocusVisualWhileDragging)"
                            RelativeSource="{RelativeSource FindAncestor,
                                                            AncestorType=RangeBase}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ShowFocusVisualStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HideFocusVisualStoryboard}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAllConverter}">
                        <Binding Path="IsDragging" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="(wpf:SliderAssist.OnlyShowFocusVisualWhileDragging)" RelativeSource="{RelativeSource FindAncestor, AncestorType=RangeBase}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource ShowFocusVisualStoryboard}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HideFocusVisualStoryboard}" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MaterialDesignSliderHorizontal" TargetType="{x:Type Slider}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True"
            UseLayoutRounding="True">
            <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Row="0"
                    Height="4"
                    Margin="0,0,0,2"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Top"
                    Visibility="Collapsed" />
                <TickBar
                    x:Name="BottomTick"
                    Grid.Row="2"
                    Height="4"
                    Margin="0,2,0,0"
                    Fill="{TemplateBinding Foreground}"
                    Placement="Bottom"
                    Visibility="Collapsed" />
                <Rectangle
                    Grid.Row="1"
                    Height="4"
                    VerticalAlignment="Center"
                    Fill="{TemplateBinding Foreground}"
                    Opacity="0.38"
                    RadiusX="2"
                    RadiusY="2" />
                <Border
                    x:Name="activeTrack"
                    Grid.Row="1"
                    Width="{Binding DecreaseRepeatButton.ActualWidth, ElementName=PART_Track}"
                    Height="4"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Background="{TemplateBinding Foreground}"
                    CornerRadius="3,0,0,3" />
                <!--  Selection range must be wrapped in a Canvas for the position to be updated correctly  -->
                <Canvas
                    Grid.Row="1"
                    Height="6"
                    VerticalAlignment="Center">
                    <Rectangle
                        x:Name="PART_SelectionRange"
                        Height="6"
                        Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        RadiusX="2"
                        RadiusY="2"
                        Visibility="Collapsed" />
                </Canvas>
                <Track
                    x:Name="PART_Track"
                    Grid.Row="1"
                    Height="20">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource MaterialDesignRepeatButton}" />
                    </Track.IncreaseRepeatButton>
                    <!--  It's important that the Thumb gets added last in the XAML to make sure it is drawn on top of both repeat buttons  -->
                    <Track.Thumb>
                        <Thumb
                            Foreground="{TemplateBinding Foreground}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Template="{StaticResource MaterialDesignSliderThumb}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsDirectionReversed" Value="True">
                <Setter TargetName="activeTrack" Property="CornerRadius" Value="0,3,3,0" />
                <Setter TargetName="activeTrack" Property="HorizontalAlignment" Value="Right" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Template" Value="{StaticResource MaterialDesignSliderHorizontal}" />
        <Style.Triggers>
            <!--<Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource MaterialDesignSliderVertical}" />
                </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>